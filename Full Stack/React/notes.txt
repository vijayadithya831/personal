... 


rest parameters/arguments => represent an indefinite number of parameters(it will pack arguements in to an array)

callbacks => a function call made inside a parameter of another function
             a function passed as an arguement to another function

             pros : it ensures that the function is not gonna execute before a task is completed
                    helps us to develop asynchronous code (when one function has to wait for another function)
                    helps us to avoid errors and some complex/potential problems


map (array.map) => executes a provided callback function once for each array element and creates a new array

Maps => it is an inbuilt object that hold key-value pairs of any datatype.
        keys should be unique, but values can have duplicates

        syntax : const store = new Map();
===========================================================================================================================================
REACT ðŸ”¥

A Facebook and Instagram Collaboration 
initial release from 2013


React is not a framework, it is a library, used to create user interface

insta, fb, ebay, skype, bitbucket, etc is made up of React

WHY REACT JS??

* SEO friendly (Search Engine Optimization)
* Coding is simpler because of JSX (JavaScript XML language => HTML can be typed in js file)

Features of ReactJS

* Virtual DOM
* Unidirectional Data Flow

React Core Concepts

* JSX
* Components (v.v.v.v.v.v.v.v.v important)
* Virtual DOM
* Unidirectional Data Flow

React Components => Self-contained reusable building blocks of web application

React is a component based architecture => this will break down our application into small encapsulated parts which can be composed to make more complex UIs.

header, side navbar, content of the page, footer => individual components of a page => aka inner components or nested componenets

root component => this components holds all other inner components

Components => components is completely reusable code => which means for example, if we develop an article component in react, we can use that in angular, vue, etc.

React is completely declarative (imperative => antonym) => Tell react what we want and reacg will build the actual UI => This is implicit way

===========================================================================================================================================

to download react (prerequsites) => 1. node js
                                    2. browser
                                    3. vscode

Commands to create react application

1. npx create-react-app (my-app)

change directory => cd (my-app)

run react app => npm start

===========================================================================================================================================

Components => In React, component represents a part of user interfaces. They are reusable
              Components can be nested inside other components.
              Components are the building blocks of any react application.


components are categorised into two types =>1. Stateless Functional Components
                                            2. Stateful Class Components

                1. => JavaScript function
                eg. function Greetings(props) {
                    return <h1> Hello, {props.name} </h1>;
                }

                2. => Classes
                eg. class Greeting extends React.Component {
                    render() {
                        return <h1>Hello, {this.props.name}</h1>
                    }
                }
        Return => returns a value back to the place where we invoked the function.

Function component:
    Properties is otherwise known as parameters/arguements, which we pass into function component
    
===========================================================================================================================================

To install npm create-react-app globally (Run in cmd) => npm install create-react-app -g

to install npm globally => npm install -g npm@latest

===========================================================================================================================================

Class Component:
    It is a normal js class


Functional Vs Class:
    Functional: It is a simple function which receives the props and returns the declaration or jsx.
                we need to try and use functional components as much as possible
                absence of 'this' keyword (advantage)
                Here we will find the solution without using the state => thats why it is called stateless component/dumb compnonent/presentational component.
    Class:      it has a bit more features than function components.
                they can maintain their own private date, aka states.
                They can contain more complicated UI logics
                They provide life-cycle hooks (most important point)
                they are also known as stateful components/smart components/container components

JSX: JavaScript XML => it is an extension to the JavaScript language syntax i.e., we will be able to write HTML like code for elements and components

Props: Properties, it is the optional input that our component can accept and it also allows the component dynamic.
       Props are read-only data that are shared between components => parent componenet can send data to child component.

syntax for props => <Component key=value/>

